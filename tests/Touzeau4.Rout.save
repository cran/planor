
R version 2.9.2 (2009-08-24)
Copyright (C) 2009 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R est un logiciel libre livré sans AUCUNE GARANTIE.
Vous pouvez le redistribuer sous certaines conditions.
Tapez 'license()' ou 'licence()' pour plus de détails.

R est un projet collaboratif avec de nombreux contributeurs.
Tapez 'contributors()' pour plus d'information et
'citation()' pour la façon de le citer dans les publications.

Tapez 'demo()' pour des démonstrations, 'help()' pour l'aide
en ligne ou 'help.start()' pour obtenir l'aide au format HTML.
Tapez 'q()' pour quitter R.


bigmemory >= 4.0 is a major revision since 3.1.2; please see package
biganalytics and http://www.bigmemory.org for more information.

[Sauvegarde de la session précédente restaurée]

> #library("planor")
> source("compar.R")
> source("init.moi")
> #options(warn=2) #all warnings are turned into errors.
> cat("\n")

> cat("***************** PLAN DE L'ARTICLE JTB09 *****************\n")
***************** PLAN DE L'ARTICLE JTB09 *****************
> cat("********** Lurette, Touzeau, Lamboni, Monod ***********\n")
********** Lurette, Touzeau, Lamboni, Monod ***********
> cat("\n")

> cat("Eighteen 4-level treatment factors\n")
Eighteen 4-level treatment factors
> cat("N=2^12\n")
N=2^12
> # 
> cat("*** RUN ***\n")
*** RUN ***
> ptmtotal <- proc.time()
> # Rprof("ST4.out")
> cat("\n")

> 
> cat("résolution 4\n")
résolution 4
> cat("\n")

> ST.F <- planor.factors( names=LETTERS[1:18], nlevels=4 )
> ST.M <- planor.model( model=~(A+B+C+D+E+F+G+H+I+J+K+L+M+N+O+P+Q+R) )
> #AB: mesure du temps
> 
> ptm <- proc.time()
> ST.K <- planor.designkey(factors=ST.F, modlist=ST.M, nunits=2^12,
+                        base=~A+B+C+D+E+F, max.sol=1)
Determination of ineligible factorial terms
Determination of ineligible pseudofactorial terms
Independent searches for primes =  2 
PHISTAR search for p = 2 
There are  12  predefined columns 
First visit to column  13 
First visit to column  14 
First visit to column  15 
First visit to column  16 
First visit to column  17 
First visit to column  18 
First visit to column  19 
First visit to column  20 
First visit to column  21 
First visit to column  22 
First visit to column  23 
First visit to column  24 
First visit to column  25 
First visit to column  26 
First visit to column  27 
First visit to column  28 
First visit to column  29 
First visit to column  30 
First visit to column  31 
First visit to column  32 
First visit to column  33 
First visit to column  34 
First visit to column  35 
First visit to column  36 
The search is closed: max.sol =  1 solutions found 
> cat("**** TEMPS planor.designkey", proc.time()-ptm,"\n")
**** TEMPS planor.designkey 22.142 0.976 23.135 0 0 
> cat("\n")

> ptmtotal <- proc.time()
> ST.P <- design.listofdesignkeys(key=ST.K, select=1)
> cat("**** TEMPS design", proc.time()-ptmtotal,"\n")
**** TEMPS design 0.268 0.01 0.278 0 0 
> ptm <- proc.time()
> # ATT: bcp d'IP supprimees
> st4<- pick.listofdesignkeys(ST.K,1)
> # save("st4", file="pickST4.save")
> ret <- summary.designkey(st4, maxprint=10)

DESIGN KEY MATRICES
Powers of  2 subdesign
    A_1 A_2 B_1 B_2 C_1 C_2 D_1 D_2 E_1 E_2
A_1   1   0   0   0   0   0   0   0   0   0
A_2   0   1   0   0   0   0   0   0   0   0
B_1   0   0   1   0   0   0   0   0   0   0
B_2   0   0   0   1   0   0   0   0   0   0
C_1   0   0   0   0   1   0   0   0   0   0
C_2   0   0   0   0   0   1   0   0   0   0
D_1   0   0   0   0   0   0   1   0   0   0
D_2   0   0   0   0   0   0   0   1   0   0
E_1   0   0   0   0   0   0   0   0   1   0
E_2   0   0   0   0   0   0   0   0   0   1

The first 10 rows on a total of 12
The first 10 columns on a total of 36 


FACTORIAL EFFECTS CONFOUNDED WITH THE MEAN
Powers of  2 subdesign
    [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
A_1    1    0    1    0    1    0    1    1    0     1
A_2    0    1    1    1    1    0    1    0    0     0
B_1    1    0    1    1    0    1    0    0    1     1
B_2    0    1    1    0    0    1    1    0    0     1
C_1    0    0    0    0    0    0    0    0    0     0
C_2    0    0    0    0    0    0    0    0    0     0
D_1    0    0    0    0    0    0    0    0    0     0
D_2    0    0    0    0    0    0    0    0    0     0
E_1    0    0    0    0    0    0    0    0    0     0
E_2    0    0    0    0    0    0    0    0    0     0

The first 10 rows on a total of 36
The first 10 columns on a total of 16777215 
               [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]
*PSEUDOWEIGHT*    3    3    6    3    4    4    4    3    4     5
*WEIGHT*          3    3    3    3    3    3    3    3    3     3

The first 10 columns on a total of 16777215 

1 = A_1 B_1
1 = A_2 B_2
1 = A_1 A_2 B_1 B_2
1 = A_2 B_1
1 = A_1 A_2
1 = B_1 B_2
1 = A_1 A_2 B_2
1 = A_1
1 = B_1
1 = A_1 B_1 B_2

> cat("**** TEMPS summary(pick)", proc.time()-ptm,"\n")
**** TEMPS summary(pick) 460.717 66.098 526.924 0 0 
> cat("**** TEMPS total", proc.time()-ptmtotal,"\n")
**** TEMPS total 460.985 66.108 527.202 0 0 
> #Rprof(NULL)
> 
> cat(" Comparer aux sorties initiales\n")
 Comparer aux sorties initiales
> load("../../OR/hmtestsSTouzeau4")
> # Pbe pour appeler compar sur des big.matrix?
> 
> slots <- slotNames(OR$ST.K)
> for (s in slots) {
+     leslot = slot(ST.K,s)
+     ORleslot = slot(OR$ST.K,s)
+   if (s ==".Data") {
+     for (l in 1:length(leslot)) {
+       ll=leslot[[l]]
+       ORll=ORleslot[[l]]
+       for (k in 1:length(ll))
+       print(all.equal(ll[[k]][,], ORll[[k]][,]))
+     }
+   }
+   else {
+     print(all.equal(slotNames(leslot), slotNames(ORleslot)))
+     for (ss in slotNames(leslot)) {
+       s1 <- slot(leslot, ss)
+       s2 <- slot(ORleslot, ss)
+       print(all.equal(s1,s2))
+     }
+   }
+ }
[1] TRUE
[1] TRUE
[1] TRUE
[1] TRUE
[1] TRUE
[1] TRUE
[1] TRUE
> 
> print(compar(ST.P, OR$ST.P))
[1] TRUE
> 
> 
> 
> proc.time()
utilisateur     système      écoulé 
    484.056      67.127     551.357 
