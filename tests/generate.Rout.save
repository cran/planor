
R version 3.2.0 (2015-04-16) -- "Full of Ingredients"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-unknown-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library("planor")
Loaded planor 1.3.6

> #---------------------------------------------------------------------------
> # EXAMPLES OF AUTOMATIC MODEL GENERATION FROM RESOLUTION
> #---------------------------------------------------------------------------
> M <- planor.model(resolution=4, factors=planor.factors(c(LETTERS[1:4]),  nlevels=rep(2,4)))
> 
> # ----------------------------------------------------------
> # 4 factors, resolution 4
> K <- planor.designkey(factors=c(LETTERS[1:4]),  nlevels=rep(2,4),  nunits=2^3, resolution=4, max.sol=2)
Preliminary step 1 : processing the model specifications
Preliminary step 2 : performing prime decompositions on the factors
Main step for prime p = 2 : key-matrix search
  => search for columns 2 to 4 
      first visit to column 2
    ---    col. 2 ( j = 1) 6 initial candidates
      first visit to column 3
    ---    col. 3 ( j = 2) 6 initial candidates
    ---    col. 3 ( j = 2) 4 selected candidates
      first visit to column 4
    ---    col. 4 ( j = 3) 4 initial candidates
    ---    col. 4 ( j = 3) 1 selected candidates
    ---    col. 4 ( j = 3) 1 selected candidates
The search is closed: max.sol = 2 solution(s) found 
> P <- planor.design(key=K, select=1)
> print(P)
An object of class "planordesign"
Slot "design":
  A B C D
1 1 1 1 1
2 1 1 2 2
3 1 2 1 2
4 1 2 2 1
5 2 1 1 2
6 2 1 2 1
7 2 2 1 1
8 2 2 2 2

Slot "factors":
An object of class "designfactors"
Slot "fact.info":
  nlev block ordered model basic dummy
A    2 FALSE   FALSE  TRUE FALSE FALSE
B    2 FALSE   FALSE  TRUE FALSE FALSE
C    2 FALSE   FALSE  TRUE FALSE FALSE
D    2 FALSE   FALSE  TRUE FALSE FALSE

Slot "pseudo.info":
  parent nlev block ordered model basic dummy
A      1    2 FALSE   FALSE  TRUE FALSE FALSE
B      2    2 FALSE   FALSE  TRUE FALSE FALSE
C      3    2 FALSE   FALSE  TRUE FALSE FALSE
D      4    2 FALSE   FALSE  TRUE FALSE FALSE

Slot "levels":
$A
[1] 1 2

$B
[1] 1 2

$C
[1] 1 2

$D
[1] 1 2



Slot "model":
[[1]]
[[1]]$Model
~(A + B + C + D)^2
<environment: 0x2eaf6f8>

[[1]]$Estimate
~(A + B + C + D)
<environment: 0x2eaf6f8>



Slot "designkey":
[[1]]
An object of class keymatrix

********** Prime  2  design **********

    A B C D
*U* 1 0 0 1
*U* 0 1 0 1
*U* 0 0 1 1



Slot "nunits":
[1] 8

Slot "recursive":
[1] FALSE

> resum <- summary(K[1])

********** Prime  2  design **********

DESIGN KEY MATRIX
    A B C D
*U* 1 0 0 1
*U* 0 1 0 1
*U* 0 0 1 1

TREATMENT EFFECTS CONFOUNDED WITH THE MEAN
1 = A B C D

BLOCK-and-TREATMENT EFFECTS CONFOUNDED WITH THE MEAN
nil

WEIGHT PROFILES
Treatment effects confounded with the mean: 4^1 
Treatment effects confounded with block effects: none 
Treatment pseudo-effects confounded with the mean: 4^1 
Treatment pseudo-effects confounded with block effects: none

> # ----------------------------------------------------------
> # 5 factors, resolution 3
> Km <- planor.designkey(factors=c(LETTERS[1:4], "block"),nlevels=rep(2,5),resolution=3,  nunits=2^4)
Preliminary step 1 : processing the model specifications
Preliminary step 2 : performing prime decompositions on the factors
Main step for prime p = 2 : key-matrix search
  => search for columns 2 to 5 
      first visit to column 2
    ---    col. 2 ( j = 1) 14 initial candidates
      first visit to column 3
    ---    col. 3 ( j = 2) 14 initial candidates
    ---    col. 3 ( j = 2) 13 selected candidates
      first visit to column 4
    ---    col. 4 ( j = 3) 13 initial candidates
    ---    col. 4 ( j = 3) 12 selected candidates
      first visit to column 5
    ---    col. 5 ( j = 4) 12 initial candidates
    ---    col. 5 ( j = 4) 11 selected candidates
The search is closed: max.sol = 1 solution(s) found 
> 
> # ----------------------------------------------------------
> # 6 factors, resolution 5
> K <- planor.designkey(factors=planor.factors( factors=c(LETTERS[1:6]), nlevels=rep(2,6)),  nunits=2^5, resolution=5, max.sol=2)
Preliminary step 1 : processing the model specifications
Preliminary step 2 : performing prime decompositions on the factors
Main step for prime p = 2 : key-matrix search
  => search for columns 2 to 6 
      first visit to column 2
    ---    col. 2 ( j = 1) 30 initial candidates
      first visit to column 3
    ---    col. 3 ( j = 2) 30 initial candidates
    ---    col. 3 ( j = 2) 28 selected candidates
      first visit to column 4
    ---    col. 4 ( j = 3) 28 initial candidates
    ---    col. 4 ( j = 3) 24 selected candidates
      first visit to column 5
    ---    col. 5 ( j = 4) 24 initial candidates
    ---    col. 5 ( j = 4) 17 selected candidates
      first visit to column 6
    ---    col. 6 ( j = 5) 17 initial candidates
    ---    col. 6 ( j = 5) 16 selected candidates
The search is closed: max.sol = 2 solution(s) found 
> P <- planor.design(key=K, select=1)
> print(P)
An object of class "planordesign"
Slot "design":
   A B C D E F
1  1 1 1 1 1 1
2  1 1 1 1 1 2
3  1 1 1 2 2 1
4  1 1 1 2 2 2
5  1 1 2 1 2 1
6  1 1 2 1 2 2
7  1 1 2 2 1 1
8  1 1 2 2 1 2
9  1 2 1 1 2 1
10 1 2 1 1 2 2
11 1 2 1 2 1 1
12 1 2 1 2 1 2
13 1 2 2 1 1 1
14 1 2 2 1 1 2
15 1 2 2 2 2 1
16 1 2 2 2 2 2
17 2 1 1 1 2 1
18 2 1 1 1 2 2
19 2 1 1 2 1 1
20 2 1 1 2 1 2
21 2 1 2 1 1 1
22 2 1 2 1 1 2
23 2 1 2 2 2 1
24 2 1 2 2 2 2
25 2 2 1 1 1 1
26 2 2 1 1 1 2
27 2 2 1 2 2 1
28 2 2 1 2 2 2
29 2 2 2 1 2 1
30 2 2 2 1 2 2
31 2 2 2 2 1 1
32 2 2 2 2 1 2

Slot "factors":
An object of class "designfactors"
Slot "fact.info":
  nlev block ordered model basic dummy
A    2 FALSE   FALSE  TRUE FALSE FALSE
B    2 FALSE   FALSE  TRUE FALSE FALSE
C    2 FALSE   FALSE  TRUE FALSE FALSE
D    2 FALSE   FALSE  TRUE FALSE FALSE
E    2 FALSE   FALSE  TRUE FALSE FALSE
F    2 FALSE   FALSE  TRUE FALSE FALSE

Slot "pseudo.info":
  parent nlev block ordered model basic dummy
A      1    2 FALSE   FALSE  TRUE FALSE FALSE
B      2    2 FALSE   FALSE  TRUE FALSE FALSE
C      3    2 FALSE   FALSE  TRUE FALSE FALSE
D      4    2 FALSE   FALSE  TRUE FALSE FALSE
E      5    2 FALSE   FALSE  TRUE FALSE FALSE
F      6    2 FALSE   FALSE  TRUE FALSE FALSE

Slot "levels":
$A
[1] 1 2

$B
[1] 1 2

$C
[1] 1 2

$D
[1] 1 2

$E
[1] 1 2

$F
[1] 1 2



Slot "model":
[[1]]
[[1]]$Model
~(A + B + C + D + E + F)^2
<environment: 0x3ec1b08>

[[1]]$Estimate
~(A + B + C + D + E + F)^2
<environment: 0x3ec1b08>



Slot "designkey":
[[1]]
An object of class keymatrix

********** Prime  2  design **********

    A B C D E F
*U* 1 0 0 0 1 0
*U* 0 1 0 0 1 0
*U* 0 0 1 0 1 0
*U* 0 0 0 1 1 0
*U* 0 0 0 0 0 1



Slot "nunits":
[1] 32

Slot "recursive":
[1] FALSE

> print(summary(K))

********** Prime  2  design **********

--- Solution  1  for prime  2  ---

TREATMENT EFFECTS CONFOUNDED WITH THE MEAN
1 = A B C D E

BLOCK-and-TREATMENT EFFECTS CONFOUNDED WITH THE MEAN
nil

WEIGHT PROFILES
Treatment effects confounded with the mean: 5^1 
Treatment effects confounded with block effects: none 
Treatment pseudo-effects confounded with the mean: 5^1 
Treatment pseudo-effects confounded with block effects: none

--- Solution  2  for prime  2  ---

TREATMENT EFFECTS CONFOUNDED WITH THE MEAN
1 = A B C D E

BLOCK-and-TREATMENT EFFECTS CONFOUNDED WITH THE MEAN
nil

WEIGHT PROFILES
Treatment effects confounded with the mean: 5^1 
Treatment effects confounded with block effects: none 
Treatment pseudo-effects confounded with the mean: 5^1 
Treatment pseudo-effects confounded with block effects: none

$`Solution 1`
$`Solution 1`$`Solution 1 for prime 2`
$`Solution 1`$`Solution 1 for prime 2`$k
  [,1]
A    1
B    1
C    1
D    1
E    1
F    0

$`Solution 1`$`Solution 1 for prime 2`$w
     Treatment effects confounded with the mean 
                                          "5^1" 
Treatment effects confounded with block effects 
                                         "none" 


$`Solution 1`$`Solution 2 for prime 2`
$`Solution 1`$`Solution 2 for prime 2`$k
  [,1]
A    1
B    1
C    1
D    1
E    1
F    0

$`Solution 1`$`Solution 2 for prime 2`$w
     Treatment effects confounded with the mean 
                                          "5^1" 
Treatment effects confounded with block effects 
                                         "none" 



> 
> 
> proc.time()
   user  system elapsed 
  1.787   0.117   1.911 
