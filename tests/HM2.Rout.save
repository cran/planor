
R version 3.3.2 (2016-10-31) -- "Sincere Pumpkin Patch"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # exemple HM, 24/02/2015
> 
> library(planor)
Loaded planor 1.3.8

> toto <- planor.designkey(factors = c("A","B","C","D","E","F","G","H","J"), nlevels = c(2,2,2,2,2,4,4,4,2), nunits=16, model = ~A+B+C+D+E+F+G+H+J, estimate=~A+B+C+D+E+F+G+H+J)
Preliminary step 1 : processing the model specifications
Preliminary step 2 : performing prime decompositions on the factors
*** Main step for prime p = 2 : key-matrix search
  => search for columns 2 to 12 
      first visit to column 2
      first visit to column 3
    ---    col. 3 ( j = 2) 13 selected candidates
      first visit to column 4
    ---    col. 4 ( j = 3) 12 selected candidates
      first visit to column 5
    ---    col. 5 ( j = 4) 11 selected candidates
      first visit to column 6
    ---    col. 6 ( j = 5) 10 selected candidates
      first visit to column 7
    ---    col. 7 ( j = 6) 8 selected candidates
      first visit to column 8
    ---    col. 8 ( j = 7) 7 selected candidates
      first visit to column 9
    ---    col. 9 ( j = 8) 4 selected candidates
      first visit to column 10
    ---    col. 10 ( j = 9) 4 selected candidates
      first visit to column 11
    ---    col. 11 ( j = 10) 0 selected candidates
    ---    col. 11 ( j = 10) 0 selected candidates
    ---    col. 10 ( j = 9) 4 selected candidates
    ---    col. 9 ( j = 8) 0 selected candidates
    ---    col. 8 ( j = 7) 7 selected candidates
    ---    col. 7 ( j = 6) 8 selected candidates
    ---    col. 6 ( j = 5) 10 selected candidates
      first visit to column 12
    ---    col. 12 ( j = 11) 1 selected candidates
The search is closed: max.sol = 1 solution(s) found 
> print(toto)
An object of class listofkeyrings

********** Prime  2  design **********

--- Solution  1  for prime  2  ---

    A B C D E F_1 F_2 G_1 G_2 H_1 H_2 J
*U* 1 0 1 0 0   1   0   0   1   1   1 0
*U* 0 1 1 0 0   0   1   1   1   1   0 0
*U* 0 0 0 1 0   1   0   1   0   1   0 1
*U* 0 0 0 0 1   0   1   0   1   0   1 1

> summary(toto)

********** Prime  2  design **********

--- Solution  1  for prime  2  ---

TREATMENT EFFECTS CONFOUNDED WITH THE MEAN
1 = A B C
1 = A D F_1
1 = B E F_2
1 = B D G_1
1 = C F_1 G_1
1 = C E G_2
1 = A F_2 G_2
1 = D F_1 F_2 G_2
1 = E F_1 G_1 G_2
1 = B F_1 F_2 G_1 G_2
1 = C D H_1
1 = B F_1 H_1
1 = E F_1 F_2 H_1
1 = A G_1 H_1
1 = F_2 G_1 G_2 H_1
1 = A E H_2
1 = C F_2 H_2
1 = F_1 F_2 G_1 H_2
1 = B G_2 H_2
1 = D G_1 G_2 H_2

The first 20 columns on a total of 255

BLOCK-and-TREATMENT EFFECTS CONFOUNDED WITH THE MEAN
nil

WEIGHT PROFILES
Treatment effects confounded with the mean: 3^32 4^51 5^51 6^70 7^42 8^6 9^3 
Treatment effects confounded with block effects: none 
Treatment pseudo-effects confounded with the mean: 3^17 4^38 5^44 6^52 7^54 8^33 9^12 10^4 11^1 
Treatment pseudo-effects confounded with block effects: none

> 
> proc.time()
   user  system elapsed 
  0.552   0.047   0.610 
