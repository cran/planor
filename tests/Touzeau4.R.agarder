#library("planor")
source("compar.R")
source("init")
#options(warn=2) #all warnings are turned into errors.
cat("\n")
cat("***************** PLAN DE L'ARTICLE JTB09 *****************\n")
cat("********** Lurette, Touzeau, Lamboni, Monod ***********\n")
cat("\n")
cat("Eighteen 4-level treatment factors\n")
cat("N=2^12\n")
# 
cat("*** RUN ***\n")
ptmtotal <- proc.time()
# Rprof("ST4.out")
cat("\n")

cat("résolution 4\n")
cat("\n")
ST.F <- planor.factors( factors=LETTERS[1:18], nlevels=4 )
ST.M <- planor.model( model=~(A+B+C+D+E+F+G+H+I+J+K+L+M+N+O+P+Q+R) )
#AB: mesure du temps

ptm <- proc.time()
ST.K <- planor.designkey(factors=ST.F, model=ST.M, nunits=2^12,
                       base=~A+B+C+D+E+F, max.sol=1)
cat("**** TEMPS planor.designkey", proc.time()-ptm,"\n")
cat("\n")
ptmtotal <- proc.time()
ST.P <- planor.design(key=ST.K, select=1)
cat("**** TEMPS design", proc.time()-ptmtotal,"\n")
ptm <- proc.time()
# ATT: bcp d'IP supprimees
st4<- pick(ST.K,1)
# save("st4", file="pickST4.save")
options(planor.max.print=10)
ret <- summary(st4)
cat("**** TEMPS summary(pick)", proc.time()-ptm,"\n")
cat("**** TEMPS total", proc.time()-ptmtotal,"\n")
#Rprof(NULL)

cat(" Comparer aux sorties initiales\n")
load("hmtestsSTouzeau4")
# Pbe pour appeler compar sur des big.matrix?

slots <- slotNames(OR$ST.K)
for (s in slots) {
    leslot = slot(ST.K,s)
    ORleslot = slot(OR$ST.K,s)
  if (s ==".Data") {
    for (l in 1:length(leslot)) {
      ll=leslot[[l]]
      ORll=ORleslot[[l]]
      for (k in 1:length(ll))
      print(all.equal(ll[[k]][,], ORll[[k]][,]))
    }
  }
  else {
    print(all.equal(slotNames(leslot), slotNames(ORleslot)))
    for (ss in slotNames(leslot)) {
      s1 <- slot(leslot, ss)
      s2 <- slot(ORleslot, ss)
      print(all.equal(s1,s2))
    }
  }
}

print(compar(ST.P, OR$ST.P))


