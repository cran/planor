
R version 3.3.2 (2016-10-31) -- "Sincere Pumpkin Patch"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library("planor")
Loaded planor 1.3.7

> 
> #---------------------------------------------------------------------------
> # EXAMPLES FROM THE PLANOR MANUAL
> #---------------------------------------------------------------------------
> # Exemple 1 page 7 : SEARCH FOR ALL SOLUTIONS
> #---------------------------------------------------------------------------
> cat("\n")

> cat("***************** EXEMPLE 1 PAGE 7 *****************\n")
***************** EXEMPLE 1 PAGE 7 *****************
> cat("\n")

> cat("Four 3-level treatment factors and one 3-level block factor\n")
Four 3-level treatment factors and one 3-level block factor
> cat("Model: bloc+(A+B+C+D)^2\n")
Model: bloc+(A+B+C+D)^2
> cat("Estimate: A+B+C+D\n")
Estimate: A+B+C+D
> cat("N=3^3\n")
N=3^3
> cat("\n")

> # 
> cat("*** RUN ***\n")
*** RUN ***
> cat("\n")

> F1 <- planor.factors( factors=c(LETTERS[1:4], "Bl"),
+                      nlevels=rep(3,5),
+                      block=~Bl )
> M1 <- planor.model( model=~Bl+(A+B+C+D)^2, estimate=~A+B+C+D )
> K1 <- planor.designkey(factors=F1, model=M1, nunits=3^3,
+                        base=~A+B+C, max.sol=Inf, verbose=TRUE)
Preliminary step 1 : processing the model specifications
Preliminary step 2 : performing prime decompositions on the factors
*** Main step for prime p = 3 : key-matrix search
  => search for columns 4 to 5 
      first visit to column 4
      first visit to column 5
    ---    col. 5 ( j = 2) 18 selected candidates
    ---    col. 5 ( j = 2) 18 selected candidates
The search is closed: 144 solution(s) found 
Warning message:
In planor.designkey.basep(p = p.k, r = r.k, b.ineligible = b.P.ineligible[pseudos.k,  :
  When max.sol is Inf, a maximum of 5000 solutions are returned
> 
> summary(K1[1])

********** Prime  3  design **********

DESIGN KEY MATRIX
  A B C D Bl
A 1 0 0 1  1
B 0 1 0 1  1
C 0 0 1 1  0

TREATMENT EFFECTS CONFOUNDED WITH THE MEAN
1 = A^2  B^2  C^2  D

BLOCK-and-TREATMENT EFFECTS CONFOUNDED WITH THE MEAN
1 = A^2  B^2  Bl
1 = C^2  D Bl^2 
1 = A B C^2  D Bl

WEIGHT PROFILES
Treatment effects confounded with the mean: 4^1 
Treatment effects confounded with block effects: 2^2 4^1 
Treatment pseudo-effects confounded with the mean: 4^1 
Treatment pseudo-effects confounded with block effects: 2^2 4^1 

> alias(K1[1])

********** Prime  3  design **********

UNALIASED TREATMENT EFFECTS
A ; B ; C ; D ; A:B^2 ; A:C^2 ; A^2:D^2 ; B:C^2 ; B:D ; C:D

ALIASED TREATMENT EFFECTS
A:C = B^2:D
A^2:D = B:C

TREATMENT AND BLOCK EFFECTS CONFOUNDED WITH BLOCK EFFECTS
Bl = A:B = C^2:D

UNALIASED BLOCK EFFECTS
nil


> a <- K1[[1]];
> print(class(a@.Data[[1]]))
[1] "keymatrix"
attr(,"package")
[1] "planor"
> print(alias(a@.Data[[1]]))
UNALIASED TREATMENT EFFECTS
A ; B ; C ; D ; Bl

ALIASED TREATMENT EFFECTS
nil

TREATMENT AND BLOCK EFFECTS CONFOUNDED WITH BLOCK EFFECTS
nil

UNALIASED BLOCK EFFECTS
nil


  unaliased trt.aliased blc.aliased 
          5           0           0 
> print(summary(a@.Data[[1]]))
DESIGN KEY MATRIX
  A B C D Bl
A 1 0 0 1  1
B 0 1 0 1  1
C 0 0 1 1  0

TREATMENT EFFECTS CONFOUNDED WITH THE MEAN
1 = A^2  B^2  Bl
1 = C^2  D Bl^2 
1 = A^2  B^2  C^2  D
1 = A B C^2  D Bl

BLOCK-and-TREATMENT EFFECTS CONFOUNDED WITH THE MEAN
nil

WEIGHT PROFILES
Treatment effects confounded with the mean: 3^2 4^1 5^1 
Treatment effects confounded with block effects: none 
Treatment pseudo-effects confounded with the mean: 3^2 4^1 5^1 
Treatment pseudo-effects confounded with block effects: none

$k
   D Bl
A  2  2
B  2  2
C  2  0
D  1  0
Bl 0  1

> 
> summary(K1[34])

********** Prime  3  design **********

DESIGN KEY MATRIX
  A B C D Bl
A 1 0 0 2  2
B 0 1 0 1  1
C 0 0 1 1  2

TREATMENT EFFECTS CONFOUNDED WITH THE MEAN
1 = A B^2  C^2  D

BLOCK-and-TREATMENT EFFECTS CONFOUNDED WITH THE MEAN
1 = C D Bl^2 
1 = A B^2  C Bl
1 = A^2  B D Bl

WEIGHT PROFILES
Treatment effects confounded with the mean: 4^1 
Treatment effects confounded with block effects: 2^1 3^2 
Treatment pseudo-effects confounded with the mean: 4^1 
Treatment pseudo-effects confounded with block effects: 2^1 3^2 

> alias(K1[34])

********** Prime  3  design **********

UNALIASED TREATMENT EFFECTS
A ; B ; C ; D^2 ; A:B ; A:C ; A^2:D ; B:C^2 ; B^2:D^2

ALIASED TREATMENT EFFECTS
A:B^2 = C:D^2
A:C^2 = B:D^2
A:D = B:C

TREATMENT AND BLOCK EFFECTS CONFOUNDED WITH BLOCK EFFECTS
Bl^2 = C^2:D^2

UNALIASED BLOCK EFFECTS
nil


> 
> proc.time()
   user  system elapsed 
  0.380   0.045   0.424 
